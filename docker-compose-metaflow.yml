version: "3"
services:
  metaflow-ui-server:
    image: netflixoss/metaflow_metadata_service:v2.4.3
    container_name: metaflow-ui-server
    restart: always
    ports:
      - "8083:8083"
    env_file:
      - metaflow_ui_server.env
    command: ["/opt/latest/bin/python3", "-m", "services.ui_backend_service.ui_server"]
    depends_on:
      - metaflow-database

  metaflow-metadata-service:
    image: netflixoss/metaflow_metadata_service:v2.4.3
    container_name: metaflow-metadata-service
    restart: always
    ports:
      - "8081:8080"
      - "8082:8082"
    env_file:
      - metaflow_metadata_service.env
    depends_on:
      - metaflow-database
      - metaflow-ui-server

  metaflow-database:
    image: "postgres:13-alpine"
    container_name: metaflow-database
    restart: always
    env_file:
      - metaflow_database.env
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "log_statement=none", "-c", "wal_level=logical"]
    volumes:
      - metaflow-database_dev_data:/var/lib/postgresql/data2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  metaflow-database_dev_data: